version: "3.9"
name: security-management-suite

services:
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    command:
      - --default-authentication-plugin=mysql_native_password
      - --character-set-server=utf8mb4
      - --collation-server=utf8mb4_unicode_ci
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 5s
      timeout: 3s
      retries: 20
    networks:
      - app_net

  backend:
    build:
      context: ./SecurityManagementApp
      dockerfile: Dockerfile
    container_name: security-backend
    restart: always
    depends_on:
      mysql:
        condition: service_healthy
    env_file:
      - .env
    environment:
      SPRING_DATASOURCE_URL: ${SPRING_DATASOURCE_URL}           # ex: jdbc:mysql://mysql:3306/security_db?useSSL=false&serverTimezone=UTC
      SPRING_DATASOURCE_USERNAME: ${SPRING_DATASOURCE_USERNAME} # = ${MYSQL_USER}
      SPRING_DATASOURCE_PASSWORD: ${SPRING_DATASOURCE_PASSWORD} # = ${MYSQL_PASSWORD}
      SPRING_MAIL_HOST: ${SPRING_MAIL_HOST}
      SPRING_MAIL_PORT: ${SPRING_MAIL_PORT}
      SPRING_MAIL_USERNAME: ${SPRING_MAIL_USERNAME}
      SPRING_MAIL_PASSWORD: ${SPRING_MAIL_PASSWORD}
      TEXTBELT_API_KEY: ${TEXTBELT_API_KEY}
      CORS_ALLOWED_ORIGINS: ${CORS_ALLOWED_ORIGINS}
      JWT_SECRET: ${JWT_SECRET}
      JWT_ACCESS_VALIDITY_MS: ${JWT_ACCESS_VALIDITY_MS}
      JWT_REFRESH_VALIDITY_MS: ${JWT_REFRESH_VALIDITY_MS}
    ports:
      - "8080:8080"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost:8080/actuator/health || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app_net

  frontend:
    build:
      context: ./security-management-frontend
      dockerfile: Dockerfile
      args:
        REACT_APP_API_URL: ${REACT_APP_API_URL}  # ex: http://localhost:8080
    container_name: security-frontend
    restart: always
    depends_on:
      backend:
        condition: service_started
    ports:
      - "3000:80"
    healthcheck:
      test: ["CMD-SHELL", "curl -fsS http://localhost/ || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 20
    networks:
      - app_net

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    environment:
      PMA_HOST: mysql        # utiliser le nom du service Docker (pas container_name)
      PMA_PORT: 3306
      PMA_USER: ${MYSQL_USER}
      PMA_PASSWORD: ${MYSQL_PASSWORD}
      UPLOAD_LIMIT: 64M
    ports:
      - "8081:80"
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app_net

volumes:
  mysql_data:

networks:
  app_net:
    name: security_app_net
